(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>B});var r=t(537),a=t.n(r),o=t(645),i=t.n(o),c=t(667),s=t.n(c),d=new URL(t(87),t.b),l=new URL(t(753),t.b),u=new URL(t(440),t.b),A=new URL(t(763),t.b),p=new URL(t(259),t.b),m=i()(a()),f=s()(d),h=s()(l),g=s()(u),C=s()(A),b=s()(p);m.push([n.id,"@font-face {\n    font-family: 'Kalam';\n    src: url("+f+") format(truetype), url("+h+") format(truetype),\n    url("+g+") format(truetype);\n    font-weight: 400;\n    font-style: normal;\n}\n\n:root {\n    --default-background-color: rgb(254, 253, 251);\n}\n\nhtml {\n    background-image: url("+C+");\n    background-size: cover;\n    background-repeat: no-repeat;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    min-height: 100%;\n    font-family: 'Kalam';\n    \n}\nbody{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 2rem;\n    justify-content: center;\n}\n\nheader {\n    height: 15vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    width: 60vw;\n    height: 15vh;\n    \n}\n.header-button {\n    height: 2rem;\n    width: 6rem;\n    border: 2px black solid;\n    border-radius: 15px;\n    background-color: black;\n    color: crimson;\n}\nfooter {\n    \n    display: flex;\n    justify-content: center;\n}\n\n#content {\n    display: flex;\n    min-height: 100vh;\n    max-width: 80vw;\n    flex-direction: column;\n    align-items:center;\n    gap: 3rem;\n    border: 2px solid black;\n    border-radius: 10px;\n    padding: 2rem;\n    background-color: var(--default-background-color)\n}\n\n.restaurant-name {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n.restaurant-name > * {\n    margin: 0\n}\n.title-image {\n    width: 60%;\n    height: 100;\n}\n.inner {\n    border: 2px black solid;\n    border-radius: 15px;\n    padding: 2rem;\n    width: 80%;\n \n}\n.restaurant-name {\n    background-image:url("+b+");\n    background-size: 100% 100%;\n    background-repeat: no-repeat;\n    background-color: black;\n    color:#392F5A;\n}\nul {\n    display: flex;\n    flex-direction: column ;\n    list-style: none;\n    padding-left: 0;\n    \n}\n.hours, .location{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,oBAAoB;IACpB;4DAC8C;IAC9C,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,8CAA8C;AAClD;;AAEA;IACI,yDAAqF;IACrF,sBAAsB;IACtB,4BAA4B;IAC5B,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,gBAAgB;IAChB,oBAAoB;;AAExB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;IACT,uBAAuB;AAC3B;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;IACT,WAAW;IACX,YAAY;;AAEhB;AACA;IACI,YAAY;IACZ,WAAW;IACX,uBAAuB;IACvB,mBAAmB;IACnB,uBAAuB;IACvB,cAAc;AAClB;AACA;;IAEI,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,eAAe;IACf,sBAAsB;IACtB,kBAAkB;IAClB,SAAS;IACT,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb;AACJ;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI;AACJ;AACA;IACI,UAAU;IACV,WAAW;AACf;AACA;IACI,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,UAAU;;AAEd;AACA;IACI,wDAA2E;IAC3E,0BAA0B;IAC1B,4BAA4B;IAC5B,uBAAuB;IACvB,aAAa;AACjB;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,gBAAgB;IAChB,eAAe;;AAEnB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;AAEvB",sourcesContent:["@font-face {\n    font-family: 'Kalam';\n    src: url('./fonts/Kalam-Light.ttf') format(truetype), url('./fonts/Kalam-Regular.ttf') format(truetype),\n    url('./fonts/Kalam-Bold.ttf') format(truetype);\n    font-weight: 400;\n    font-style: normal;\n}\n\n:root {\n    --default-background-color: rgb(254, 253, 251);\n}\n\nhtml {\n    background-image: url(\"/src/img/wooden-board-empty-table-top-blurred-background.jpg\");\n    background-size: cover;\n    background-repeat: no-repeat;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    min-height: 100%;\n    font-family: 'Kalam';\n    \n}\nbody{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 2rem;\n    justify-content: center;\n}\n\nheader {\n    height: 15vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 2rem;\n    width: 60vw;\n    height: 15vh;\n    \n}\n.header-button {\n    height: 2rem;\n    width: 6rem;\n    border: 2px black solid;\n    border-radius: 15px;\n    background-color: black;\n    color: crimson;\n}\nfooter {\n    \n    display: flex;\n    justify-content: center;\n}\n\n#content {\n    display: flex;\n    min-height: 100vh;\n    max-width: 80vw;\n    flex-direction: column;\n    align-items:center;\n    gap: 3rem;\n    border: 2px solid black;\n    border-radius: 10px;\n    padding: 2rem;\n    background-color: var(--default-background-color)\n}\n\n.restaurant-name {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n.restaurant-name > * {\n    margin: 0\n}\n.title-image {\n    width: 60%;\n    height: 100;\n}\n.inner {\n    border: 2px black solid;\n    border-radius: 15px;\n    padding: 2rem;\n    width: 80%;\n \n}\n.restaurant-name {\n    background-image:url(\"/src/img/1200px-Flag_of_Trinidad_and_Tobago.svg.png\");\n    background-size: 100% 100%;\n    background-repeat: no-repeat;\n    background-color: black;\n    color:#392F5A;\n}\nul {\n    display: flex;\n    flex-direction: column ;\n    list-style: none;\n    padding-left: 0;\n    \n}\n.hours, .location{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n}"],sourceRoot:""}]);const B=m},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],c=0;c<n.length;c++){var s=n[c],d=r.base?s[0]+r.base:s[0],l=o[d]||0,u="".concat(d," ").concat(l);o[d]=l+1;var A=t(u),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)e[A].references++,e[A].updater(p);else{var m=a(p,r);r.byIndex=c,e.splice(c,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var c=t(o[i]);e[c].references--}for(var s=r(n,a),d=0;d<o.length;d++){var l=t(o[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},440:(n,e,t)=>{n.exports=t.p+"c4671477e81c3c51ffc0.ttf"},87:(n,e,t)=>{n.exports=t.p+"26d8dba039c5c77b1ac3.ttf"},753:(n,e,t)=>{n.exports=t.p+"831aaad03890ba2d7417.ttf"},259:(n,e,t)=>{n.exports=t.p+"e85961e671f335cee683.png"},763:(n,e,t)=>{n.exports=t.p+"be92fbb6cb9b04656d9b.jpg"}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),o=t(569),i=t.n(o),c=t(565),s=t.n(c),d=t(216),l=t.n(d),u=t(589),A=t.n(u),p=t(426),m={};m.styleTagTransform=A(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=l(),e()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals,document.querySelector("body");const f=document.querySelector("#content");function h(){const n=document.createElement("div");n.classList.add("restaurant-name"),n.classList.add("inner");const e=document.createElement("h1"),t=document.createElement("h1"),r=document.createElement("h1");e.textContent="Trini Delights",t.textContent="&",r.textContent="Brooklyn Bites",n.appendChild(e),n.appendChild(t),n.appendChild(r),f.appendChild(n);const a=document.createElement("div"),o=document.createElement("p");o.innerHTML="Bringing together the staple dishes of the islands of Trinidad and tobago together with local favorite street foods of NYC.",a.appendChild(o),a.classList.add("inner"),a.classList.add("intro"),f.appendChild(a);const i=document.createElement("div"),c=document.createElement("h2"),s=document.createElement("ul");i.classList.add("inner"),i.classList.add("hours"),c.innerHTML="Working Hours",i.appendChild(c),[{day:"Sunday",hours:"11:00am - 9:00pm"},{day:"Monday",hours:"12:00pm - 11:00pm"},{day:"Tuesday",hours:"12:00pm - 11:00pm"},{day:"Wednesday",hours:"12:00pm - 11:00pm"},{day:"Thursday",hours:"12:00pm - 11:00pm"},{day:"Friday",hours:"12:00pm - 12:00am"},{day:"Saturday",hours:"11:00am - 1:00am"}].forEach((n=>{let e=document.createElement("li");e.innerHTML=`${n.day}: ${n.hours}`,s.appendChild(e)})),i.appendChild(s),f.appendChild(i);const d=document.createElement("div"),l=document.createElement("h2"),u=document.createElement("p");d.classList.add("inner"),d.classList.add("location"),l.innerHTML="Location",d.appendChild(l),u.innerHTML="1-Chome-2-3 Hatsudai, Shibuya City , Tokyo",d.appendChild(u),f.appendChild(d)}class g{constructor(n,e,t,r){this.name=n,this.description=e,this.price=t,this.pictureURL=r}}!function(){const n=document.querySelector("header"),e=document.querySelector("footer");["Home","Menu","Contact"].forEach((e=>{let t=document.createElement("button");t.innerHTML=e,t.classList.add("header-button"),t.setAttribute("id",e),n.appendChild(t)}));const t=document.createElement("a");t.innerHTML="Background Image by tirachard",t.href="https://www.freepik.com/free-photo/wooden-board-empty-table-top-blurred-background_1387629.htm#query=restaurant%20background&position=2&from_view=keyword",e.appendChild(t);const r=document.createTextNode("  on Freepik");e.appendChild(r)}(),h(),document.querySelectorAll(".header-button").forEach((n=>{n.addEventListener("click",(n=>{!function(){for(;f.firstChild;)f.removeChild(f.firstChild)}();const e=n.target.id;"Home"==e&&h(),"Menu"==e&&new g("Trinidadian Curry Chicken","This is a staple dish in trinidad enjoyed in restaurants and homes alike. Made with a wide assortment of herbs and spices. Definitely will delight your taste buds!","1000 YEN")}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,